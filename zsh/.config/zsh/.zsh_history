cd ..
vim .zshrc
ls -a
rm .zshrc
mv .zshrc_2023-12-05_1701769109 .zshrc
nvim .zshrc
cd .config/zsh
clear
vim
nvim
vi
ls
nvim exit
sudo pacman -S rg
sudo pacman -S ripgrep
exit
cd .config/zsh
ls
ls -a
rm .zshrc
mv .zshrc_2024-02-25_1708792913 .zshrc
exit
echo $TERM
echo $SHELL
cd
ls
vi /etc/hosts
clear
ls
cd .config
ls
ls kitty
ls nvim
ls zsh
ls -a
cd ..
ls -a
clear
ls
vi
brew install neovim
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
ls
cd .config/zsh
ks
ls
vi .zshrc
brew
ckear
clear
nvim
clear
reload config
clear
ls
cd .config/kitty
vi kitty.conf
kitty
cd .config/zsh
vi .zshrc
clear
zsh <(curl -s https://raw.githubusercontent.com/zap-zsh/zap/master/install.zsh) --branch release-v1 --keep
brew install fnm
brew install eza
brew install --cask font-jetbrains-mono
clear
zsh
fnm --help
brew install zoxide
clear
brew install pfetch
clear
pfetch
kitty --reload-config
clear
ls
brew --help
brew search exa
exa
eza --help
clear
z .config
ls
zoxide
zoxide
clear
ls
cd .config/zsh
ls
ll
lla
vi .zshrc
clear
ls
ls
exir
exit
ls
clear
clear
ls
ls -a
lla
clear
clear
ls
cd dotfiles
ls
cd ..
clear
brew search zen
brew --cask zen-browser
brew install --cask zen-browser
zen-browser
clear
cd .config/kitty
vi kitty.conf
clear
vi
clear
cd .config/kitty
vi kitty.conf
ckear
clear
cd .config/kitty
ls
vi kitty.conf
clear
defaults write com.apple.dock autohide-delay -float 0; killall Dock
clear
ls
clear
ks
ls
clear
ls
clear
ls
vi
clear
ls
vi
ls
cd
vi .config/zsh/.zshrc
ls
cd .config
ls
ls -a
ls -a
cd
cd .config
ls -a
cd kitty
ls
vi
cd ..
ls
ls -a
cd nvim
ls
vi
ls
cd ..
ls
clear
cd ..
ls
tmux
brew install tmux
clear
tmux
tmux
tmux --help
ls
clear
ls
cd 
vi .tmux-sessions
brew install tpm
clear
tmux
tmux --verbose
tmux -c
vi .tmux.conf
tmux
tmux
eza
zap
zap update
cd .config/zsh
vi
clear
ls
z 
zoxide
zoxide test
cd .config/zsh
clear
vi
clear
ls
lla
vi
clear
ls
cd ..
ls
cd kitty
ls
brew --help
brew search icon
brew install --cask font-material-icons
clear
ls
clear
iv
vi
\:q
clear
tmux
cd ..
cd
cd dotfiles
ls
cd tmux
vi
tmux
vi
cd /usr/share/tmux-plugin-manager/tpm
which tpm
brew --help
brew search tpm
brew info tpm
vi
dg
fg
tmux
vi .config/kitty/kitty.conf
vi .config/zsh/.zshrc
brew info zap
brew search zap
zap list
clear
tmux
vi .config/zsh/zsh-exports.zsh
zoxide init zsh
clear
z 
ls
clear
ls
mkdir work
ls
cd work
clear
ls
mkdir saga
cd saga
ssh-keygen -t ed25519 -C "bulaybulay.rielj@gmail.com"
eval "$(ssh-agent -s)"\

cd
tmux
cd .ssh/
ls
vi config
vi config
pbcopy < ~/.ssh/id_ed25519.pub\

z saga
ls
git clone git@github.com:soulboundgg/saga.git
ls
mv saga ../
ls
cd ..
ls
mv saga test
mv test/saga ./
ls
rm -rf test
clear
ls
mkdir soulboundgg
mv saga soulboundgg
ls
cd soulboundgg
clear
ls
git clone git@github.com:soulboundgg/ai16mc-solana.git
git clone git@github.com:soulboundgg/prediction-contracts.git
git clone git@github.com:soulboundgg/solana-sbc-token.git
clear
ls
fnm install lts
fnm --help
fnm list
fnm list-remote
fnm install jod
fnm install Jod
fnm --help
fnm install --help
fnm install lts/jod
clear
ls
cd saga
fnm use lts/jod
fnm env
cd
cd .zsh_sessions
cd ..
cd .config/zsh
vi
fnm use lts/jod
clear
cd sa
cd work/soulboundgg
ls
cd saga
clear
npm i pnpm -g
pnpm i
clear
ls
z Dow
cd
cd Downloads
ls
ls
ls
cd Downloads
ls
sudo hdiutil attach Docker.dmg
sudo /Volumes/Docker/Docker.app/Contents/MacOS/install
sudo hdiutil detach /Volumes/Docker
clear
docker ls
docker ls
docker ls
docker ps
clear
vi .tmux.conf
reattach-to-user-namespace
brew search reattach-to-user-namespace
brew install reattach-to-user-namespace
clear
ls
tmux
vi .tm
killall tmux
tmux
tmux -v
vi .tmux.conf
tmux
tmux -v
vi .tmux.conf
tmux
tmux -v
brew search strace
tmux new $SHELL
ncdu
ncdu
exit
echo $SHELL
\:q
vi .tmux.conf
vi .tmux.conf
exit
exit
exit
tmux
tmux new $SHELL
clear
tmux attach-session
echo $SHELL
brew install zsh
brew install zsh
brew install fzf fd lazygit
vi .tmux.conf
tmux -v
clear
vi .tmux.conf
tmux attach-session
tmux
clea
rls
exit
exit
tmux
ls
cd work
cd soulboundgg
clear
ls
cd saga
tmux
exit
tmux attach-session
exit
tmux attach-session
tmux attach-session
brew search netflix
brew install font-hack-nerd-font
brew install font-fira-code-nerd-font
clear
vi
brew search spotify
brew install --cask spotify
clear
brew install --cask alt-tab
brew install forge
curl --proto '=https' --tlsv1.2 -sSfL https://solana-install.solana.workers.dev | bash
solana --versio
solana --version
avm --help
anchor --version
solana-test-validator --help
clear
z nvi
vi
z nvi
cd ~/.config/nvim
vi
tmux attach-session
tmux attach-session
brew install ripgrep
unbt
clear
cd ..
ls
cd ai16mc-solana
cd ..
git clone git@github.com:soulboundgg/saga.git saga-2
solana config set --url localhost
clear
cd saga-2
cd 
rm -rf ~/.nvm
rm -rf ~/.config/nvm
vi .zshrc
z saga
cd ..
cd saga-2
vi
vi
z main
vi
git checkout main
git pull
clear
vi
cd ../saga-2
pnpm i
vi ~/.config/solana/id.json
clear
cd ../saga-2
solana address
cd ../ai16mc-solana
anchor build
clear
solana wallet
solana address
solana-keygen new -o /Users/rielj/.config/solana/id.json
solana address
clear
solana --help
solana airdrop 100000
solana airdrop 100000
clear
solana-keygen -v ~/.config/solana/id.json
solana-keygen --help
solana config get
vi ~/.config/solana/id.json
clear
anchor deploy
anchor migrate
anchor migrate
pnpm i
anchor migrate
anchor --version
anchor migrare
anchor migrate
anchor migrate
npm i yarn -g
anchor migrate
anchor migrate
anchor migrate
anchor migrate
anchor migrate
anchor migrate
anchor buid
anchor b
anchor 
anchor d
anchor deploy
anchor migrate
anchor migrate
clear
anchor deploy
anchor migrate
anchor types
rm target
rm target -f
rm -rf target
anchor build
anchor migrate
rm -rf target
anchor build
anchor deploy
anchor migrate
rm -rf .anchor
anchor build
anchor migrate
pnpm deploy:loca
pnpm deploy:local
anchor migrate
rm -rf node_modules
pnpm i
anchor migrate
anchor build
anchor build --help
rm -rf target
anchor build
anchor deploy
anchor migrate
anchor migrate
solana-keygen new -o target/deploy/forecast_market-keypair.json
solana-keygen new -o target/deploy/forecast_market-keypair.json
solana-keygen new -o target/deploy/forecast_market-keypair.json --force
anchor build
anchor migrate
anchor deploy
anchor migrate
clear
avm install 0.30.1
avm use 0.30.1
rustup --version
rustup install 1.84.1
rustup override set 1.84.1
clear
cd ../ai16mc-solana
anchor build
rustup update
rustup default stable
clear
anchor build
rustup override add nightly
clear
anchor build
rustc --version
rustup default stable
rustc --version
rustup update
rustup override set 1.86.0
anchor build
vi /Users/rielj/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/anchor-syn-0.30.1/src/idl/defined.rs
anchor build
clear
solana-test-validator
solana-test-validator
solana-test-validator --reset
solana-test-validator --reset
solana-test-validator --reset
brew install --cask chromium
brew search chromium
brew install --cask chromium
z soul
ls
vi
cd solana-sbc-token
clear
clear
pnpm i
clear
vi
cd ../solana-sbc-token
forge --help
anchor build
anchor build
anchor build --help
anchor build --program-name sbc-token
rustup update
rustup default stable
cargo clean
cargo update
\
rm -rf ~/.cargo/registry
anchor build --program-name sbc-token
anchor build --program-name=sbc-token
anchor build --program-name=sbc-token
clear
anchor deploy --program-name sbc-token
anchor migrate --help
anchor migrate --provider.cluster localhost
anchor migrate --provider.cluster localnet
ls
clear
vi
anchor deploy --program-name sbc-token
anchor migrate --provider.cluster localnet
anchor migrate --provider.cluster localnet
anchor migrate --provider.cluster localnet
anchor build --program-name=sbc-token
anchor migrate --provider.cluster localnet
solana-keygen new -o target/deploy/sbc_token-keypair.json --force
anchor migrate --provider.cluster localnet
anchor build
anchor build --program-name=sbc-token
anchor deploy --program-name sbc-token
anchor migrate --provider.cluster localnet
cd ../solana-sbc-token
clear
vi
vi
clear
vi
git checkout dev
git pull
clear
vi
vi
rm pnpm-lock.yaml
pnpm i
clear
vi
vi
vi
vi
vi
reboot
sudo reboot
z 
cd .config
ls
vi zsh
ls
cd zsh
vi .zshrc
z ai
anchor build
anchor build
anchor build
vi
rm -rf ~/.cargo/registry
cargo clean
cargo update
cargo build
anchor build
rustc --version
rustup default stable
anchor --versio
anchor --version
vi
vi
vi
vi
vi
vi
vi
vi
clear
vi
vi
vi
vi
clear
clear
vi
cd ~/.config
ls
cd solana
ls
pwd
solana programs --show
solana programs show --programs
solana program show --programs
solana program show --programs
solana program show --programs
solana program show --programs
solana program show --programs
solana program show --programs
solana program show --programs
solana program show --programs
solana balance
solana config get
solana program show --programs
solana program show --programs
clear
./saga setup_pg
brew install psql
brew install libpq
pnpm dev:app
./saga setup_pg
./saga setup_pg
pnpm dev:app
pnpm dev:app
pnpm dev:app
pnpm dev:app
vi
clear
pnpm dev:app
pnpm dev:app
pnpm dev:app
pnpm dev:app
pnpm dev:app
pnpm dev:app
z alac
z
cd .config/
vi kitty/kitty.conf
z saga
./saga setup_pg
brew install libsql
clear
pnpm upgrade zi
pnpm upgrade @privy-io/react-auth
pnpm typecheck
c;ear
clear
npm i vscode-json-languageserver --global
clear
pnpm upgrade @privy-io/wagmi 
clear
git checkout hotfix/privy-auth
git checkout -b feat/tip-onramp
git checkout hotfix/privy-auth
clear
git pull
clear
git merge origin/dev
rm pnpm-lock.yaml
pnpm i
git checkout feat/ai16mc-integration
git merge origin/dev
vi
clear
pnpm dbmate migrate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" up
pnpm dbmate migrate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" up
pnpm dbmate migrate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" up
pnpm dbmate --help
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up
solana address
solana balance
pnpm sqlc
pnpm sqlgen
brew install sqlc
pnpm sqlgen
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up
pnpm dbmate migrate
pnpm dbmate migrate up
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up
pnpm dbmate --url "postgresql://postgres:password@localhost:6311/postgres?sslmode=disable" migrate up
pnpm dbmate --help
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up --help
pnpm dbmate migrate --help
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up -v
pnpm i dbmate -D
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up -v
pnpm sqlgen
clear
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up -v
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up -v
pnpm dbmate --url "postgresql://postgres:password@127.0.0.1:6310/postgres?sslmode=disable" migrate up -v
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up -v
dbmate
brew install dbmate
dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up -v
dbmate --help
dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up -v
dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate down
dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate
dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" --help
dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate --help
dbmate drop
dbmate migrate
dbmate migrate up
echo $DATABASE_URL
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up -v
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" --migrations-dir db/migrations -s db/schema.sql migrate up
pnpm dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" --migrations-dir db/migrations -s db/schema.sql migrate up
dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" --migrations-dir db/migrations -s db/schema.sql migrate up
dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -d ./db/migrations -s ./db/schema.sql migrate up
dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" --migrations-dir "./db/migrations" -s "./db/schema.sql" migrate up
kncdu
kncdu
dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -d ./db/migrations -s ./db/schema.sql migrate up
dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -d "./db/migrations" -s "./db/schema.sql" migrate up
dbmate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -d "./db/migrations/" -s "./db/schema.sql" migrate up
dbmate -e .env
dbmate --env-file .env
dbmate --env-file ".env" migrate up
dbmate --env-file ".env" migrate up --verbose
dbmate migrate up -u postgresql://postgres:password@localhost:6310/postgres?sslmode=disable
dbmate migrate up -u "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable'
dbmate migrate up -u "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
pnpm db:migrate
pnpm dbmate new test
pnpm dbmate migrate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" up
pnpm dbmate migrate --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" migrate up
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
pnpm dbmate migrate down --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
pnpm dbmate migrate down --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
pnpm dbmate migrate down --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
brew search fl
brew search fly
brew install flyctl
brew install flyctl
brew --help
brew update
brew install flyctl
fly --help
fly ssh -a saga-app-production
fly console -a saga-app-production
fly log -a saga-app-production
fly logs -a saga-app-production
git checkout main
git checkout main
git pull
git checkout hotfix/privy-error-logs
git checkout -b hotfix/privy-error-logs
pnpm typecheck
pnpm typecheck
fly logs -a saga-app-production
fly logs -a saga-app-production
clear
git checkout feat/ai16mc-integration
clear
git merge origin/dev
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
./saga rm_pg && ./saga setup_pg
./saga rm_pg && ./saga setup_pg
brew install dbmate
brew update
brew update -v
brew install dbmate --help
brew install dbmate -f
brew reinstall dbmate
dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
dbmate status
dbmate migrate up -s ./db/schema.sql --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
./saga rm_pg
dbmate migrate up -s ./db/schema.sql --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
./saga rm_pg && ./saga setup_pg
dbmate status
dbmate --help
dbmate wait
dbmate dump -s ./db/schema.sql --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
dbmate dump -s ./db/schema.sql --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
dbmate dump --help
dbmate dump --help
dbmate dump 
dbmate status --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"\

dbmate status \

touch db/schema.sql
dbmate dump --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"\

dbmate dump \

brew search pg_dump
brew install postgresql
dbmate dump \

pg_dump --version
docker ps
docker ps -v
dbmate --versiob
dbmate --version
vi
pnpx exec dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
pnpx exec dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
npx dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
brew search lib
brew search postgres
brew --help
brew list
docker ps
docker ps -a
docker image 
docker image ls
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
pnpm dbmate migrate up -e .env
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
dbmate dump
brew list
brew install postgresql@17
brew uninstall postgresql@14
dbmate dump
brew reinstall postgresql@17
dbmate dump
brew list
pg_dump --version
brew link --force --overwrite postgresql@17\

pg_dump --version
dbmate dump
pnpm typecheck
pnpm sqlgen\

pnpm typecheck
pnpm typecheck
pnpm sqlgen
pnpm sqlgen
git checkout hotfix/privy-session
git pull
git checkout main
git pull
pnpm typecheck && pnpm check && pnpm test
git checkout hotfix/privy-session
git merge origin/main
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm check && pnpm typecheck && pnpm test
z saga
git fetch
git checkout -b hotfix/privy-session
pnpm biome
pnpm check
git checkout feat/ai16mc-integration
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
git checkout hotfix/privy-session
brew install chromium
clear
brew search slack
brew install --cask slack
clear
pnpm dev:edge
pnpm dev:edge
pnpm dev:edge
fly ssh -a saga-app-staging
fly console -a saga-app-staging
tmuxt attach-session
tmuxt attach-session
tmux attach-session
z asga
z saga
ls
tmux
pnpm sqlgen
ls
pg_restore -U postgres -d postgres -Fc staging_backup.dump
pg_restore --clean -U postgres -d postgres -Fc staging_backup.dump
pg_restore --help
pg_restore --clean -U postgres -d postgres -Fc staging_backup.dump -p 5432
pg_restore --clean -U postgres -d postgres -Fc staging_backup.dump -p 5432 -h localhost
pg_restore --clean -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost
brew list qmk
brew search qmk
brew install --cask qmk-toolbox
cear
z Down
ls
unzip CIDOO_v65_json.zip
ls
unzip CIDOO_V65_V3_USB_bb6ce7f8-a71b-4c33-9ca2-291f229e6f02.zip
unzip CIDOO_V65_V3_2.4G_ba32d730-e36e-43f8-af17-707e1a1d029b.zip
unzip CIDOO_V65_PRO-USB.JSON_f1c0d021-53be-4281-9fa4-580d281e320d.zip
unzip CIDOO_V65_V2_f5c9c7ab-cf4c-4654-88fb-8aa0d4f60831.zip
brew search loopback
brew install --cask loopback
brew uninstall loopback
brew search blackhole
brew search blackhole-2ch
brew install --cash blackhole-16ch
brew install --cask blackhole-16ch
brew uninstall --cask blackhole-16ch
brew install --cash blackhole-16ch
brew install --cask blackhole-16ch
brew search ladio
brew install --cask blackhole-2ch
reboot
sudo reboot
nvim
nvim
vi
clear
vi
fly logs -a saga-app-production
fly logs -a saga-app-production
clear
git checkout dev
git pull
clear
git checkout -b feat/tip-coinbase
pnpm i
git checkout main
git pull
git checkout hotfix/privy-session
git pull
clear
git branch
git checkout main
git pull
git checkout -b hotfix/onramp-coinbase
pnpm i
pnpm check && pnpm typecheck && pnpm test
pnpm sqlgen
git checkout main
git pul
git pull
git checkout hotfix/prediction-queries
git checkout -b hotfix/prediction-queries
clear
fly postgres --help
dly postgres db --help
fly postgres db --help
fly proxy --help
fly proxy 6969 -a saga-db-staging
fly proxy 5433 -a saga-db-staging
pnpm i
pnpm sqlgen
git branch
git checkout hotfix/onramp-coinbase
clear
git rebase origin/main
clear
git checkout dev
git pull
clear
git checkout -b feat/leaderboard
pnpm i
pnpm sqlgen
git checkout main
git pull
clear
git branch -D feat/leaderboard
git checkout -b hotfix/leaderboard-rank
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
fly console -a saga-app-production
fly logs -a saga-app-production
git checkout main
git pull
git checkout hotfix/privy-session-revert
git checkout -b hotfix/privy-session-revert
pnpm i
clear
pg_dump -h localhost -p 6969 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
vi
docker ls
docker ps
docker ps
docker ps -a
docker restart saga_pg_test saga_pg_dev
pnpm dev:app
pnpm dev:app
pnpm dev:app
z Dow
mv coinbase-logo.png ~/work/soulboundgg/saga/public/icons
ls
mv coinbase.svg ~/work/soulboundgg/saga/public/icons/
pnpm dev:edge
pnpm dev:edge
pnpm dev:edge
git checkout main
git checkout main
git pull
pnpm routegen
glogp
clear
brew search telegeram
brew install --cask telegram
brew search discorc
brew search discord
brew install --cask discord
clear
brew search discord
brew install --cask discord
clear
asdlka;sd
asdA
brew search notion
brew install --cask notion
brew search vim
clear
brew search chrome
brew search arc
clear
brew search netflix
tmux
tmux
tmux
tmux attach-session
z kit
cd
cd .config/kitty
vi
clear
\:q
exit
nvim
exit
exit
git stash --include-untracked
git checkout dev
git pull
clear
git checkout feat/privy-session
git checkout -b feat/privy-session
git checkout -M fix/privy-session
git branch -M fix/privy-session
git branch -M dev
git reset --soft
git reset --soft HEAD~1
git checkout feat/privy-session
git pull
git checkout dev
git pull
clear
git branch --help
git branch -d feat/privy-session
git checkout -b feat/privy-session
pnpm biome
pnpm check
pnpm check && pnpm typecheck && pnpm test
clear
git checkout feat/privy-session
git reset --soft HEAD~1
git checkout -b hotfix/privy-session-fix
git reset --soft HEAD~1
git stash
git checkout main
git pull
git checkout -b hotfix/privy-session-impv
pnpm check && pnpm typecheck && pnpm test
clear
git checkout dev
git checkout dev
git pull
clear
pnpm i
clear
git checkout feat/trading-campaign
git checkout -b feat/trading-campaign
pnpm dbmate new trading-campaign
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm dbmate migrate down --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm dbmate migrate down --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm dbmate migrate down --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm dbmate migrate down 
pnpm dbmate status
pnpm dbmate --help
pnpm dbmate down --help
pnpm dbmate down -v
pnpm dbmate down -v
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm dbmate down -v
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
fly --help
fly postgres --help
fly mpg --help
fly mpg connect -a saga-db-production
fly mpg connect --help
fly mpg connect --cluster saga-db-production
fly postgres connect -a saga-db-production
fly postgres connect -a saga-db-production
pnpm dbmate down -v
pnpm dbmate down -v
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
git merge origin/dev
git merge origin/dev
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm sqlgen
clear
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm dbmate migrate down 
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm dbmate migrate down -v
pnpm dbmate migrate down --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm sqlgen
clear
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
tmux attach-session
clear
vi kitty/kitty.conf
cd .config/kitty/
vi kitty.conf
clear
tmux attach-session
brew search ffmpeg
brew install ffmpeg
cd \

cd Documents/
ls
ffmpeg -i cool-1min.mov -vcodec libx264 -crf 28 -preset fast -acodec aac -b:a 128k output.mp4\

ffmpeg -i cool-1min.mov \\
  -vcodec libx264 -crf 23 -preset veryfast \\
  -acodec aac -b:a 128k -ac 2 \\
  output.mp4\

ffmpeg -i cool.mov \\
  -vcodec libx264 -crf 23 -preset veryfast \\
  -acodec aac -b:a 128k -ac 2 \\
  cool.mp4\

ffmpeg -i cool.mov \\
  -vcodec libx264 -crf 23 -preset fast -pix_fmt yuv420p \\
  -acodec aac -b:a 128k -ac 2 \\
  cool-max-support.mp4\

ffmpeg -i cool.mov \\
  -f lavfi -t 60 -i color=c=black:s=720x720:r=30 \\
  -map 1:v:0 -map 0:a:0 \\
  -c:v libx264 -pix_fmt yuv420p -crf 28 \\
  -c:a aac -b:a 128k -shortest \\
  output-for-ig.mp4\

ffmpeg -i cool-max-support.mp4 \\
  -f lavfi -t 60 -i color=c=black:s=720x720:r=30 \\
  -map 1:v:0 -map 0:a:0 \\
  -c:v libx264 -pix_fmt yuv420p -crf 28 \\
  -c:a aac -b:a 128k -shortest \\
  output-for-ig.mp4\

ffmpeg -i cool.mov \\
  -f lavfi -t 60 -i color=c=black:s=720x720:r=30 \\
  -map 1:v:0 -map 0:a:0 \\
  -c:v libx264 -pix_fmt yuv420p -crf 28 \\
  -c:a aac -b:a 128k -shortest \\
  output-for-ig.mp4\

clear
brew search obs
brew search keycastr
brew install --cask keycastr
z Doc
ls
ffmpeg -i cool-audio.mov -vn -c:a aac -b:a 128k -movflags +faststart cool-audio-ig.mp4\

ffmpeg -i cool-audio.mov -ac 2 -c:a aac -b:a 128k -vn -movflags +faststart cool-audio-ig.mp4\

ffmpeg -f lavfi -i color=c=black:s=720x720:d=58 -i cool-audio.mov \\
-c:v libx264 -c:a aac -b:a 128k -pix_fmt yuv420p -shortest -movflags +faststart \\
cool-audio-ig.mp4\

ffmpeg -i cool-audio.mov -ac 2 -c:a aac -b:a 128k -vn -movflags +faststart ig-audio.m4a\

nvim
vi
git pull
git checkout main
git pull
git remote -v
git pull
git checkout dev
git pull
clear
git checkout main
git pull
clear
git checkout -b hotfix/solana-smart-wallet
pnpm dbmate new user_solana_address
pnpm dev:app[]
pnpm dev:app
brew search fan
brew install --cask macs-fan-control
clear
system_profiler SPHardwareDataType | grep 'Model Identifier'\

uname -m
system_profiler SPHardwareDataType\

sw_vers\

sysctl -n machdep.cpu.brand_string\

reboot
sudo reboot
pnpm sqlgen
pnpm sqlgen
clear
git branch -A
git branch -a
git checkout feat/ai16mc-integration
clear
git checkout main
git pull
pnpm sqlgen
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm sqlgen
clear
git checkout dev
git branch -a
git checkout feat/chat
z saga
git checkout feat/chat
git checkout feat/chat
git checkout main
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
nvim
docker restart saga_pg_test saga_pg_dev
clear
pnpm dev:app
pnpm dev:app
pnpm dev:app
clear
pnpm sqlgen
pnpm dev:app
clear
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
z kit
vi kitty.conf
vi
brew search figma
brew install --cask figma
clear
z nvi
vi
vi
git stash
git checkout dev
pnpm check && pnpm typecheck && pnpm test
vi
NVIM_LOG_LEVEL=debug nvim\

vi
vi
vi
vi
vi
vi
clear
vi
vi
pnpm dev:edge
pnpm dev:edge
z nvi
vi
nvim
tmux
z Dow
cd ..
cd Documents/Videos
clear
ls
cd QuickShare_2505221816
ffmpeg -i 20250521_221522_1.mp4 \\
  -vf "scale=iw*min(1080/iw\,1920/ih):ih*min(1080/iw\,1920/ih),pad=1080:1920:(1080-iw*min(1080/iw\,1920/ih))/2:(1920-ih*min(1080/iw\,1920/ih))/2" \\
  -c:v libx264 -preset fast -crf 28 \\
  -c:a aac -b:a 128k -movflags +faststart \\
  -max_muxing_queue_size 1024 \\
  output.mp4\

ffmpeg -i output.mp4 \\
  -vf "scale=720:-2" \\
  -c:v libx264 -preset veryslow -crf 32 \\
  -c:a aac -b:a 96k -movflags +faststart \\
  output-small.mp4\

ffmpeg -i 20250521_221522_1.mp4 \\
  -vf "scale=720:-2" \\
  -c:v libx264 -preset veryslow -crf 32 \\
  -c:a aac -b:a 96k -ac 1 \\
  -movflags +faststart \\
  -max_muxing_queue_size 1024 \\
  output-instagram.mp4\

ffmpeg -i 20250521_221044.mp4 \\
  -vf "scale=iw*min(1080/iw\,1920/ih):ih*min(1080/iw\,1920/ih),pad=1080:1920:(1080-iw*min(1080/iw\,1920/ih))/2:(1920-ih*min(1080/iw\,1920/ih))/2" \\
  -c:v libx264 -preset fast -crf 28 \\
  -c:a aac -b:a 128k -movflags +faststart \\
  -max_muxing_queue_size 1024 \\
  output.mp4\

z Dow
ls
clear
ls
vi CIDOO_V65_V3_USB.JSON
exit
z
ls
z zsh
ls
vi history
exit
tmux attach-session
nvim
fly postgres credentials -a saga-db-staging
fly db credentials -a saga-db-staging
fly --help
fly apps --help
fly postgres --help
fly postgres db --help
fly postgres config -a saga-app-staging
fly postgres config show -a saga-db-staging
fly secrets list -a saga-db-staging\

pg_dump postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@localhost:5433/soulboundtv-staging?sslmode=require -Fc -f staging_backup.dump
pg_dump "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@localhost:5433/soulboundtv-staging?sslmode=require" -Fc -f staging_backup.dump
pg_dump "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@localhost:5433/soulboundtv-staging" -Fc -f staging_backup.dump
pg_dump "postgresql://postgres:password:5433/soulboundtv-staging" -Fc -f staging_backup.dump
pg_dump "postgresql://postgres:password@localhost:5433/soulboundtv-staging" -Fc -f staging_backup.dump
pg_dump "postgresql://soulboundtv_owner:password@localhost:5433/soulboundtv-staging" -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
ls
rm -rf staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
ls
rm -rf staging_backup.dump
clear
ls
z Dow
ls
rm -rf *.dmg
ls
rm -rf CIDOO*
ls
clear
ls
cd ..
ls
ls Documents
ls Documents/Videos
ls dotfiles
ls Library
clear
ls Public
ls
ls Desktop
clear
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
ls
ls
rm -rf staging_backup.dump
clear
fly console -a saga-app-staging
fly console -a saga-db2-production
fly console -a saga-db-staging
fly console -a saga-app-staging
pg_dump -h localhost -p 6969 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U soulboundtv_owner -d soulboundtv-staging -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U soulboundtv_owner -d soulboundtv-staging -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U soulboundgg-staging_owner -d postgres -Fc -f staging_backup.dump
pg_dump "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx-pooler.us-east-2.aws.neon.tech/soulboundtv-staging?sslmode=require" -Fc -f staging_backup.dump
pg_restore --clean -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost
z saga
cd
pg_restore --clean -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost
pg_restore --clean --no-owner -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost
pg_restore --clean --no-owner --role=postgres -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost
pg_restore --clean --no-owner --no-comments --no-privileges --role=postgres -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost
clear
pg_restore --clean --table=public.users --no-owner --no-comments --no-privileges --role=postgres -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost
pg_restore --clean --table=public.users --no-owner --no-comments --no-privileges --role=postgres -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost
pg_restore --clean --table=public.users --no-owner --no-comments --no-privileges --role=postgres -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost --verbose
pg_restore --clean --data-only --table=public.users --no-owner --no-comments --no-privileges --role=postgres -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost --verbose
pg_restore --data-only --table=public.users --no-owner --no-comments --no-privileges --role=postgres -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost --verbose
pg_restore --data-only --table=public.users -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost --verbose
pg_restore --data-only --table=public.users -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost --verbose
pg_restore --data-only --no-owner --no-comments --no-privileges --role=postgres -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost --verbose
pg_restore --clean --no-owner --no-comments --no-privileges --role=postgres -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost
pg_restore --clean --no-owner --no-comments --no-privileges --role=postgres -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost --verbose
pg_restore --clean --no-owner --no-comments --no-privileges --role=postgres -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost --verbose
pg_restore --data-only --no-owner --no-comments --no-privileges --role=postgres -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost --verbose
pg_restore --data-only --table=public.users --no-owner --no-comments --no-privileges --role=postgres -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost --verbose
pg_restore --data-only --table=public.users -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost --verbose
pg_restore --data-only --table=public.users -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost -v ON_ERROR_STOP=0
pg_restore --data-only --table=public.users -U postgres -d postgres -Fc staging_backup.dump -p 6310 -h localhost -v
pg_restore --data-only --table=public.users -U postgres -d postgres -Fc staging_backup.dump \\
  -f users_data.sql -p 6310 -h localhost\

clear
ls
pg_restore --data-only --table=public.users -U postgres -d postgres -Fc staging_backup.dump \\
  -f users_data.sql -p 6310 -h localhost\

pg_restore --data-only --table=public.users -U postgres -Fc staging_backup.dump \\
  -f users_data.sql -p 6310 -h localhost\

ls
pg_restore --data-only -U postgres -Fc staging_backup.dump \\
  -f staging_data.sql -p 6310 -h localhost\

clear
ls
psql -U postgres -d postgres -h localhost -p 6310 \\
  -v ON_ERROR_STOP=0 -f staging_data.sql
psql -U postgres -d postgres -h localhost -p 6310 \\
  -v ON_ERROR_STOP=0 -f users_data.sql
clear
pg_restore --clean -U postgres -Fc staging_backup.dump -p 6310 -h localhost -f users_data.sql
psql -U postgres -d postgres -h localhost -p 6310 \\
  -v ON_ERROR_STOP=0 -f users_data.sql
pg_restore --clean --table=public.users -U postgres -Fc staging_backup.dump -p 6310 -h localhost -f users_data.sql
psql -U postgres -d postgres -h localhost -p 6310 \\
  -v ON_ERROR_STOP=0 -f users_data.sql
psql -U postgres -d postgres -h localhost -p 6310 -v ON_ERROR_STOP=0 -f users_data.sql
pg_restore --clean -U postgres -Fc staging_backup.dump -p 6310 -h localhost -f users_data.sql
vi users_data.sql
pg_restore --clean --table="public.users" -U postgres -Fc staging_backup.dump -p 6310 -h localhost -f users_data.sql
psql -U postgres -d postgres -h localhost -p 6310 -v ON_ERROR_STOP=0 -f users_data.sql
vi users_data.sql
pg_restore -l -Fc staging_backup.dump | grep users\

pg_restore --verbose --data-only -Fc -t public.users staging_backup.dump \\
  -f users_data.sql -U postgres -h localhost -p 6310\

vi users_data.sql
cat users_data.sql
pg_restore -l -Fc staging_backup.dump > toc.list\

vi toc.list
pg_restore --data-only -Fc -U postgres -h localhost -p 6310 \\
  --use-list=toc.list -d postgres\

pg_restore --data-only -Fc -U postgres -h localhost -p 6310 \\
  --use-list=toc.list -f users_data.sql staging_backup.dump\

ls
cat users_data.sql
psql -U postgres -d postgres -h localhost -p 6310 -v ON_ERROR_STOP=0 -f users_data.sql
pg_restore --data-only --inserts -Fc -U postgres -h localhost -p 6310 \\
  --use-list=toc.list -f users_data_inserts.sql staging_backup.dump\

pg_dump "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx-pooler.us-east-2.aws.neon.tech/soulboundtv-staging?sslmode=require" -Fc -f staging_backup.dump --inserts
pg_dump "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx-pooler.us-east-2.aws.neon.tech/soulboundtv-staging?sslmode=require" -Fc -f staging_backup_inserts.dump --inserts
pg_dump "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx-pooler.us-east-2.aws.neon.tech/soulboundtv-staging?sslmode=require" -Fc -f staging_backup.dump
pg_dump "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx-pooler.us-east-2.aws.neon.tech/soulboundtv-staging?sslmode=require" -Fc -f staging_backup_inserts.dump --inserts
pg_restore --data-only -Fc -U postgres -h localhost -p 6310 \ --use-list=toc.list -f users_data_inserts.sql staging_backup.dump\

pg_restore --data-only -Fc -U postgres -h localhost -p 6310 \ --use-list=toc.list -f users_data_inserts.sql staging_backup_inserts.dump\

ls
pg_restore --data-only --inserts -Fc -U postgres -h localhost -p 6310 \\
  --use-list=toc.list -f users_data_inserts.sql staging_backup_inserts.dump\

pg_dump "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx-pooler.us-east-2.aws.neon.tech/soulboundtv-staging?sslmode=require" -Fc -f --data-only --inserts --table=public.users -f users_data_inserts.sql\

pg_restore --clean -U postgres -Fc staging_backup_inserts.dump -p 6310 -h localhost 
pg_restore --clean -U postgres -Fc -f staging_backup_inserts.dump -p 6310 -h localhost 
pg_restore --clean -U postgres -Fc -f staging_backup_inserts.dump -p 6310 -h localhost -v
clear
pg_restore --clean -U postgres -d postgres -Fc staging_backup_inserts.dump
pg_restore --clean -U postgres -d postgres -Fc staging_backup_inserts.dump -p 6310 -h localhost
pg_restore --clean --no-owner --no-comments --no-privileges --role=postgres -U postgres -d postgres -Fc staging_backup_inserts.dump -p 6310 -h localhost --verbose
cat users_data_inserts.sql
cat users_data.sql
psql -U postgres -d postgres -h localhost -p 6310 -v ON_ERROR_STOP=0 -f users_data.sql
pg_restore --data-only -Fc -U postgres -h localhost -p 6310 \ --use-list=toc.list -f users_data_inserts.sql staging_backup_inserts.dump\

pg_restore --data-only --inserts -Fc -U postgres -h localhost -p 6310 \\
  --use-list=toc.list -f users_data_inserts.sql staging_backup_inserts.dump\

pg_restore --data-only  -Fc -U postgres -h localhost -p 6310 \\
  --use-list=toc.list -f users_data_inserts.sql staging_backup_inserts.dump\

ls
cat users_data_inserts.sql
psql -U postgres -d postgres -h localhost -p 6310 -v ON_ERROR_STOP=0 -f users_data_inserts.sql
clear
nvim
git checkout feat/trading-campaign
vi
git checkout feat/trading-campaign
git pull
clear
vi
brew search libre
brew install --cask libreoffice
clear
z Dow
ls
ls
cd .
cd ..
ls
rm -rf tmux-client-*
ls
rm -rf tmux-server-*
s
ls
ls
ls Documents
z sa
ls
cd ..
ls
cd saga
ls
clear
z Dow
ls
ls
cd ..
cd work
ls
ls soulboundgg
cd soulboundgg
ls
ls ai16mc-solana
ls solana-sbc-token
cd saga/
ls
clear
z Dow
ls
cd ..
ls
mkdir tmp
cd tmp
clear
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U soulboundtv_owner -d postgres -Fc -f staging_backup.dump
pg_isready -h localhost -p 5433\

lsof -i :5433\

pg_dump -h localhost -p 5433 -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
ls
rm -rf staging_backup.dump
clear
rm -rf staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U soulboundtv_owner -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U soulboundtv_owner -d soulboundtv-staging -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -p password -d postgres -Fc -f staging_backup.dump
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump --help
pg_dump --help
pg_dump -h localhost -p 5433 -U postgres -w -d postgres -Fc -f staging_backup.dump 
pg_dump -h localhost -p 5433 -U postgres -w -d postgres -Fc -f staging_backup.dump 
pg_dump -h localhost -p 5433 -U postgres -W -d postgres -Fc -f staging_backup.dump 
z Dow
ls
pg_restore --clean -U postgres -d postgres -Fc soulboundgg-staging2.dump -p 6310 -h localhost
pg_restore --clean -U postgres -d postgres -Fc soulboundgg-staging2.dump -p 6310 -h localhost
pg_restore --clean --no-owner --no-acl -U postgres -d postgres -Fc soulboundgg-staging2.dump -p 6310 -h localhost
clear
pg_restore --clean --no-owner --no-acl -U postgres --table=public.users -d postgres -Fc soulboundgg-staging2.dump -p 6310 -h localhost
clear
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump 
psql -h localhost -p 5433 -U postgres -d mydb\

psql -h localhost -p 5433 -U postgres -d postgres\

sudo netstat -tunp | grep :5433\

clear
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump 
pg_dump --help
clear
pg_dump -h localhost -p 5433 -U postgres -d postgres -Fc -f staging_backup.dump 
z nvi
vi
z zsh
vi
nvim
vi
clear
clear
vi
clear
vi
clear
vi
docker restart saga_pg_test saga_pg_dev
pnpm dev:app
pnpm dev:app
pnpm dev:app
pnpm dev:app
pnpm dev:app
cd
ls
ls -la
ls -la
ls -la
ls -la
clear
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
pg_dump --help
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls --help
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
ls -la
watch -n 1 ls -la
brew install watch
watch -d -n 1 ls -la\

pnpm dev:edge
pnpm dev:edge
clear
pnpm dev:edge
pnpm dev:edge
clear
pnpm sqlgen
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
./saga rm_pg && ./saga setup_pg
./saga rm_pg && ./saga setup_pg
./saga rm_pg && ./saga setup_pg
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
clear
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
git pull
git pull
./saga rm_pg && ./saga setup_pg
clear
fly postgres connect -a saga-db-production
clear
git checkout feat/trading-campaign
clear
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm sqlgen
pnpm sqlgen
pnpm dbmate migrate down --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm dbmate migrate down -v
pnpm dbmate --help
pnpm dbmate down --help
pnpm dbmate rollback --verbose
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
git merge origin/dev
git merge origin/dev
c;ea]
clear
pnpm typecheck && pnpm check && pnpm test
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm typecheck && pnpm check && pnpm test
pnpm sqlgen
clear
git checkout dev
git checkout dev
git pull
clear
glogp
clear
fly ssh -a saga-app-staging
fly console -a saga-app-staging
clear
ls
git pull
clear
git checkout -b feat/trading-campaign-impvs
git checkout dev
git branch -D feat/trading-campaign-impvs
git checkout -b feat/trading-campaign/v0.0.2
git checkout -b feat/trading-campaign-v1
clear
vi
clear
pnpm i
clear
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
git rebase origin/dev
git checkout dev
git pull
clear
git checkout -b feat/trading-campaign-feature-flag
clear
clear
git checkout release/v1.3.9
git fetch
git checkout release/v1.3.9
clear
git pull
git reset --soft HEAD~1
git pull
pnpm biome
pnpm check
clear
git checkout feat/trading-campaign-v1
clear
git rebase origin/dev
git rebase origin/dev
pnpm i
git checkout main
git pull
fly console -a saga-app-production
clear
git checkout feat/trading-campaign-v1
clear
clear
git checkout feat/trading-campaign
git checkout feat/trading-campaign
clear
pnpm i
glogp
git checkout 20814b13a65583fd1f6d0ea73be00b0f0df3ffba
git checkout dev
clear
git pull
cler
clear
clear
clear
git checkout feat/trading-campaign-impvs
git checkout -b feat/trading-campaign-impvs
pnpm check && pnpm typecheck && pnpm test
git rebase origin/dev
clear
git checkout dev
git pull
clear
git checkout -b feat/prediction-polish
clear
./saga rm_pg && ./saga setup_pg
clear
clea
clear
clear
git checkout dev
git branch -D feat/prediction-polish
clear
git checkout -b feat/prediction-fixes
clear
clear
fly console -a saga-app-staging
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm typecheck
pnpm sqlgen
pnpm typecheck && pnpm check && pnpm test
fly proxy 5433 -a saga-db-staging
clear
fly proxy 5433 -a saga-db-staging
clear
git checkout dev
git pull
clear
ls
clear
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
./saga rm_pg && ./saga setup_pg
clear
clear
fly proxy 5433 -a saga-db-prod
clear
git checkout -b feat/withdraw-impvs
pnpm biome
pnpm check
fly proxy 5433 -a saga-db2-production
fly proxy 6969 -a saga-db2-production
fly proxy --help
fly proxy 5433:5432 -a saga-db-staging
clear
./saga rm_pg && ./saga setup_pg
clear
clear
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
./saga rm_pg && ./saga setup_pg
./saga rm_pg && ./saga setup_pg
clear
./saga rm_pg && ./saga setup_pg
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
pnpm dbmate migrate up --help
pnpm dbmate migrate --help
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v --strict
clear
clear
ls
./saga rm_pg && ./saga setup_pg
./saga rm_pg && ./saga setup_pg
clear
pnpm sqlgen
./saga rm_pg && ./saga setup_pg
clear
pnpm sqlgen
curl "http://localhost:8787/__scheduled?cron=*\/10+*+*+*+*"
pnpm sqlgen
fly console -a saga-app-production
pnpm sqlgen
curl "http://localhost:8787/__scheduled?cron=*\/10+*+*+*+*"
curl "http://localhost:8787/__scheduled?cron=*\/3+0+*+*+*"
curl "http://localhost:8787/__scheduled?cron=*\/10+*+*+*+*"
curl "http://localhost:8787/__scheduled?cron=*\/10+*+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=*\/10+*+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=*\/10+*+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=*10+*+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=*\/10+*+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=3+0+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=*/10+*+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=*/10+*+*+*+*"
clear
git rebase origin/dev
git rebase origin/dev
git rebase --abort
git merge origin/dev
git checkout -b feat/leaderboard-fixes
pnpm dbmate new user_sbc_balances_rank
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v --strict
pnpm sqlgen
pnpm sqlgen
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=*/10+*+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=*/10+*+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=*/10+*+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=3+0+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=*/10+*+*+*+*"
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
clear
pnpm typecheck && pnpm check && pnpm test
fly console -a saga-app-staging
fly console -a saga-app-staging
fly logs -a saga-app-staging
clear
git checkout dev
git checkout dev
git pull
clear
clear
tmux attach-session
tmux
tmux attach-session
tmux
dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"
dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v
dbmate --help
dbmate status --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable"\

dbmate status \

clear
dbmate --help
dbmate status
exit
dbmate status
pnpm dbmate migrate up --url "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx.us-east-2.aws.neon.tech/soulboundtv?sslmode=disabled" -v --strict
pnpm dbmate migrate up --url "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx.us-east-2.aws.neon.tech/soulboundtv?sslmode=disabled"
pnpm dbmate migrate up --url "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx.us-east-2.aws.neon.tech/soulboundtv?sslmode=required"
tmux attach-session
nvim
z nvi
vi
nvim
cd ..
ls
cd prediction-contracts
clear
ls
vi
git checkout feat/subgraph-v2
clear
vi
git checkout feat/subgraph
vi
nvim
clear
git merge origin/main
clear
docker restart saga_pg_test saga_pg_dev
fly logs -a saga-app-staging
çclear
fly logs -a saga-app-staging
clear
git pull
fly logs -a saga-app-staging
clear
fly console -a saga-app-staging
fly console -a saga-app-staging
fly logs -a saga-app-staging
fly logs -a saga-app-staging
git merge origin/dev
git merge origin/dev
clear
fly logs -a saga-app-staging
fly logs -a saga-app-staging
fly logs -a saga-app-staging
fly logs -a saga-app-staging
clear
psql postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx-pooler.us-east-2.aws.neon.tech/soulboundtv-staging
pnpm dbmate new optimize_leaderboard_indexes
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v --strict
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v --strict
git merge origin/dev
pnpm biome
pnpm check
clear
pnpm dbmate new add_username_and_userid_to_balances
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v --strict
pnpm dbmate migrate down -v
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v --strict
pnpm dbmate dow
pnpm dbmate down
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v --strict
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
fly ssh -a saga-app-staging
fly console -a saga-app-staging
fly postgres connect -a saga-db-staging
pnpm dbmate migrate --help
fly postgres connect -a saga-db-staging
psql --help
psql "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx.us-east-2.aws.neon.tech/soulboundtv?sslmode=required"
psql "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx.us-east-2.aws.neon.tech/soulboundtv"
psql "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx.us-east-2.aws.neon.tech/soulboundtv-staging"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=3+0+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=*/10+*+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=3+0+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=3+0+*+*+*"
clear
git checkout feat/xp-leaderboard-fix
git checkout -b feat/xp-leaderboard-fix
git checkout dev
git pull
git checkout feat/leaderboard-fixes
git merge origin/dev
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=3+0+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=3+0+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=3+0+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=3+0+*+*+*"
git checkout dev
git merge origin/dev
pnpm sqlgen
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=3+0+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=3+0+*+*+*"
curl "http://localhost:8787/cdn-cgi/handler/scheduled?cron=3+0+*+*+*"
pnpm sqlgen
pnpm sqlgen
fly console -a saga-app-staging
git rebase origin/dev
git rebase --abort
git merge origin/dev
pnpm dev:app
pnpm dev:app
pnpm dev:edge
pnpm dev:edge
pnpm dev:edge
clear
clear
pnpm dev:edge
pnpm dev:edge
pnpm dev:edge
pnpm dev:edge
brew search karbiner
brew search karbiner
brew search karabiner
brew install --cask karabiner-elements
reboot
sudo reboot
clear
pnpm dbmate new index_livepeer_sessions_stream_session_unique\

clear
fly console -a saga-app-production
pnpm sqlgen
curl "https://saga-edge-staging.soulbound.gg/cdn-cgi/handler/scheduled?cron=*/10+*+*+*+*"
pnpm sqlgen
pnpm sqlgen
pnpm sqlgen
curl "https://saga-edge-staging.soulbound.gg/reset-sbc-balances"
clear
fly console -a saga-app-production
fly console -a saga-app-production
fly console -a saga-app-staging
docker restart saga_pg_test saga_pg_dev
clear
pnpm typecheck && pnpm check && pnpm test
git checkout dev
git pull
fly logs -a saga-app-staging
git checkout dev
git pull
exit
z 
cd Movies
ls
ffmpeg -i 2025-06-05\ 14-28-46.mov -vcodec libx264 -crf 28 -preset veryslow -acodec aac -b:a 128k -movflags +faststart output.mp4\

exit
exit
vi
exit
tmux
ls
cd work
ls
mkdir keyring
cd keyring
git clone git@github.com:Keyring-Network/frontend.git
cd frontend
clear
tmux
clear
glogp
git checkout d91bae39
glogp
git checkout 7a9e8648
glogp
git checkout 7a9e8648
glogp
git checkout 17f49edc
nvim
git checkout release/v1.4.0
git fetch
clear
git checkout release/v1.4.0
vi
clear
git checkout main
git checkout dev
git pull
clear
vi
clear
git logp
glogp
git checkout f54a1f90
vi
clear
git checkout main
git pull
clear
vi
git checkout f54a1f90
vi
vi
nvim
nvim
git checkout feat/leaderboard-fixes
git merge origin/dev
fly console -a saga-app-staging
curl "http://localhost:8787/fetch-sbc-balances"
curl "http://localhost:8787/fetch-sbc-balances"
curl "http://localhost:8787/fetch-sbc-balances"
curl "http://localhost:8787/fetch-sbc-balances"
curl "https://saga-edge-staging.soulbound.gg/reset-sbc-balances"
curl "http://localhost:8787/fetch-sbc-balances"
clear
git pull
clear
git merge origin/main
pnpm sqlgen
pnpm typecheck && pnpm check && pnpm test
clear
fly logs -a saga-app-staging
c;ear
clear
git checkout feat/leaderboard-fixes
git rebase origin/dev
git rebase --abort
git merge origin/dev
pnpm dbmate new user_sbc_balances_wallet_chain_index
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v --strict
clear
fly logs -a saga-app-staging
clear
git checkout dev
git pull
git checkout -b feat/trading-campaign-v2
clear
git checkout dev
git branch -D feat/trading-campaign-v2
git branch -D feat/trading-campaign-v1
git branch -b feat/trading-campaign-v1
git checkout -b feat/trading-campaign-v1
clear
clear
git checkout main
git checkout main
git pull
clear
git checkout hotfix/trading-campaign-feature-flag
git checkout -b hotfix/trading-campaign-feature-flag
fly logs -a saga-app-production
claer
clear
git merge origin/dev
clear
wrangler tail
brew search wrangler
brew install cloudflare-wrangler
clear
wrangler --help
wrangler login
wrangler tail --help
git merge origin/dev
clear
nvim
clear
vi
vi
brew search sketch
brew install --cask linear-linear
brew search ardour
brew search yt-dlp
brew install yt-dlp
clear
alias
yta-mp3 "https://www.youtube.com/watch?v=9T8Q5Ef2Ql4"
sudo reboot
fly console -a saga-app-staging
git merge origin/dev
psql "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx.us-east-2.aws.neon.tech/soulboundtv-staging"
clear
fly logs -a saga-app-staging
psql "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx.us-east-2.aws.neon.tech/soulboundtv-staging"
fly console -a saga-app-production
clear
psql "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx.us-east-2.aws.neon.tech/soulboundtv"
psql "postgresql://soulboundtv_owner:npg_LEPA2b6yMzGv@ep-flat-lake-a5dyr4zx.us-east-2.aws.neon.tech/soulboundtv-staging"
pnpm dev:app
pnpm dev:app
pnpm dbmate down
pnpm dbmate migrate up --url "postgresql://postgres:password@localhost:6310/postgres?sslmode=disable" -v --strict
node
pnpm dev:edge
pnpm dev:edge
pnpm dev:edge
pnpm dev:edge
pnpm dev:edge
pnpm dev:edge
pnpm dev:edge
clear
fly console -a saga-app-staging
clear
git branch -m hotfix/trading-campaign-feature-flag hotfix/leaderboard-fixes
fly console -a saga-app-production
ls
pnpm i
fnm use lts/jod
pnpm i
npm i pnpm -g
clear
vi
vi
ls
cd apps/user-app
clear
vi
vi
vi
vi
vi
clear
vi
vi
vi
clear
clea
vi
vi
vi
clear
cd ..
ls
cd ..
vi
vi
vi
vu
vi
vi
pnpm --version
pnpm i
git checkout dev
pnpm i
fnm use v20.8.0
pnpm i
fnm use lts/jod
pnpm i
clear
git checkout -b bulaybulayrielj/ext-1-kyc-links-page-doesnt-refresh-after-board-member-changes
clear
git commit -m "fix(user-app): properly sync affiliation changes"
git pushh
git pushh
git push
git push --set-upstream origin bulaybulayrielj/ext-1-kyc-links-page-doesnt-refresh-after-board-member-changes\

git push
git push --set-upstream origin bulaybulayrielj/ext-1-kyc-links-page-doesnt-refresh-after-board-member-changes\

z nvi
vi
fnm list-remote
clea
clear
pnpm dev:user
clear
pnpm dev:user
tmux
tmux
exit
